/* autogenerated by Processing revision 1286 on 2023-03-19 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class final_project extends PApplet {

 public void setup()
{
    WHOData d = new WHOData(
        "D:\\Projects\\CSCI-5609\\final_project\\who_aap_2021_v9_11august2022_replaced.csv"
    );

    ArrayList<String[]> data = d.getRawData();
    println("\nPrinting first 20 entries:");
    println("Features:");
    for (int i = 0; i < data.get(0).length-1; i++)
    {
        print(data.get(0)[i] + ", ");
    }
    println(data.get(0)[data.get(0).length-1]);

    println("\nData:");
    for (int i = 0; i < 20; i++)
    {
        for (int j = 0; j < data.get(i).length-1; j++)
        {
            print(data.get(i)[j] + ", ");
        }
        println(data.get(i)[data.get(i).length-1]);
    }
}
  
  
 

public class WHOData
{
    private ArrayList<String[]> raw_data;
    private String file_path;
    public WHOData(String path)
    {
        this.load_raw_from_csv(path);
    }

    /* 
        Loads raw data from file path provided
        Assumes a comma seperated value file
    */
    private void load_raw_from_csv(String path)
    {
        this.file_path = path;
        raw_data = new ArrayList<String[]>();

        String line = "";
        try 
        {
            BufferedReader br = new BufferedReader(
                new FileReader(this.file_path)
            );
            while ((line = br.readLine()) != null)
            {
                raw_data.add(line.split(","));
            }
        } 
        catch (IOException e)
        {
            e.printStackTrace();
        }
        println(
            "Successfully loaded " + 
            raw_data.size() + 
            " lines of data from " + 
            this.file_path + "."
        );
    }

    /* getters */

    public ArrayList<String[]> getRawData() { return raw_data; }
    public String[] getFeatures() { return raw_data.get(0); }  


}


  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "final_project" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
